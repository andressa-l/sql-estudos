-- Criando o banco de dados PRODUCAOBD.
CREATE DATABASE producaobd
go

use producaobd
go

-- Criando a tabela FABRICANTE.
CREATE TABLE  fabricante (
codfabricante SMALLINT NOT NULL,
nomefabricante VARCHAR(30) NOT NULL,
PRIMARY KEY (codfabricante));

-- Criando a tabela PRODUTO.
CREATE TABLE  Produto (
codproduto INT NOT NULL,
nomeproduto VARCHAR(30) NOT NULL,
codfabricante SMALLINT NOT NULL,
PRIMARY KEY (codproduto),
CONSTRAINT fk_Produto_Fabricante
FOREIGN KEY (codfabricante)
REFERENCES Fabricante (codfabricante));

-- Criando a tabela LOTE.
CREATE TABLE Lote (
numlote INT NOT NULL,
datavalidade DATE NOT NULL,
precounitario DECIMAL(10,2),
quantidade SMALLINT NOT NULL DEFAULT 100,
valorlote DECIMAL(10,2),
codproduto INT NOT NULL,
PRIMARY KEY (numlote),
CONSTRAINT fk_Lote_Produto
FOREIGN KEY (codproduto)
REFERENCES Produto (codproduto));

-- Inserindo registros na tabela FABRICANTE.
INSERT INTO Fabricante VALUES 
(1, 'Clear'),
(2, 'Rexona'),
(3, 'Jhonson & Jhonson'),
(4, 'Coleston');


-- Inserindo registros na tabela PRODUTO.
INSERT INTO Produto VALUES 
(10, 'Sabonete em Barra', 2),
(11, 'Shampoo Anticaspa', 1),
(12, 'Desodorante Aerosol Neutro', 2),
(13, 'Sabonete Liquido', 2),
(14, 'Protetor Solar 30', 3),
(15, 'Shampoo 2 em 1', 2),
(16, 'Desodorante Aerosol Morango', 2),
(17, 'Shampoo Anticaspa', 2),
(18, 'Protetor Solar 60', 3),
(19, 'Desodorante Rollon', 1);


-- Inserindo registros na tabela LOTE.
INSERT INTO Lote (numlote, datavalidade, precounitario, quantidade, valorlote, codproduto) VALUES
(100, '2028-08-05', 9.90, 500, DEFAULT, 18),
(101, '2027-05-01', 8.47, 500, DEFAULT, 10),
(102, '2028-06-02', 11.50, 750, DEFAULT, 19),
(103, '2026-02-01', 12.37, 383, DEFAULT, 18),
(104, '2027-01-01', 10.00, 400, DEFAULT, 17),
(105, '2026-04-07', 11.50, DEFAULT, DEFAULT, 15),
(106, '2023-06-08', 10.30, 320, DEFAULT, 17),
(107, '2024-10-20', 13.90, 456, DEFAULT, 12),
(108, '2026-07-20', 7.53, 750, DEFAULT, 13),
(109, '2025-05-13', 8.00, 720, DEFAULT, 11),
(110, '2027-06-05', 9.50, 860, DEFAULT, 13),
(111, '2028-03-02', 14.50, 990, DEFAULT, 14),
(112, '2028-04-05', 11.40, 430, DEFAULT, 14),
(113, '2025-06-04', 11.30, 200, DEFAULT, 12),
(114, '2027-10-06', 12.76, 380, DEFAULT, 19),
(115, '2028-11-06', 8.30, 420, DEFAULT, 17),
(116, '2027-10-20', 8.99, 361, DEFAULT, 19),
(117, '2024-11-15', 10.09, 713, DEFAULT, 11);

update 
	Lote 
set
	valorlote = quantidade * precounitario

-- Questão 1
SELECT *
FROM
	Lote
WHERE 
	YEAR(datavalidade) = 2024;


-- Questão 2
SELECT 
	COUNT(*) AS TotalLotes2025
FROM 
	Lote
WHERE 
	YEAR(datavalidade) = 2025;

-- Questão 3
SELECT 
	codproduto, COUNT(*) AS TotalLotesPorProduto
FROM 
	Lote
GROUP BY 
	codproduto;


-- Questão 4
SELECT 
	codproduto, SUM(precounitario * quantidade) AS ValorTotalLotes
FROM 
	Lote
GROUP BY 
	codproduto;

-- Questão 5
SELECT *
FROM 
	Lote
ORDER BY 
	datavalidade;

-- Questão 6
SELECT *
FROM 
	Lote
WHERE 
	datavalidade BETWEEN '2024-02-01' AND '2026-06-30';

-- Questão 7
INSERT INTO Lote (numlote, datavalidade, precounitario, quantidade, valorlote, codproduto) VALUES
(118, '2029-12-28', 3.78, 1223, DEFAULT, 13);

-- Listando os lotes com valor de lote acima da média
WITH MediaValorLote AS (
    SELECT AVG(valorlote) AS Media
    FROM Lote
)
SELECT 
	Lote.*
FROM 
	Lote, MediaValorLote
WHERE 
	Lote.valorlote > MediaValorLote.Media;

-- Questão 8
SELECT 
	P.nomeproduto, L.precounitario
FROM 
	Produto AS P
JOIN 
	Lote AS L ON P.codproduto = L.codproduto
WHERE 
	P.codproduto = 13;

UPDATE Lote
SET precounitario = precounitario * 0.85
WHERE codproduto = 13;


-- Questão 9
-- Excluindo os lotes associados ao Shampoo Anticaspa da Rexona
DELETE FROM Lote
WHERE codproduto IN (SELECT codproduto FROM Produto WHERE nomeproduto = 'Shampoo Anticaspa' AND codfabricante = 2);

-- Excluindo o Shampoo Anticaspa da Rexona
DELETE FROM Produto
WHERE nomeproduto = 'Shampoo Anticaspa' AND codfabricante = 2;

SELECT *
FROM Produto;

-- Questão 10
ALTER TABLE Lote
ALTER COLUMN precounitario DECIMAL(10, 2);

-- Questão 11
ALTER TABLE Lote
ADD STATUSLOTE VARCHAR(9) DEFAULT 'Analise';

UPDATE Lote
SET STATUSLOTE = 'Analise'
WHERE STATUSLOTE IS NULL;


-- Questão 12
-- Atualizando o status dos lotes de acordo com a tabela fornecida
UPDATE Lote
SET STATUSLOTE = 
    CASE numlote
        WHEN 107 THEN 'Recall'
        WHEN 113 THEN 'Liberado'
        WHEN 117 THEN 'Liberado'
        WHEN 108 THEN 'Recall'
        WHEN 116 THEN 'Recall'
        WHEN 112 THEN 'Liberado'
        WHEN 109 THEN 'Liberado'
        WHEN 114 THEN 'Liberado'
    END
WHERE numlote IN (107, 113, 117, 108, 116, 112, 109, 114);

-- Questão 13
SELECT STATUSLOTE, COUNT(*) AS QuantidadeLotes
FROM Lote
GROUP BY STATUSLOTE;

-- Questão 14
SELECT F.nomefabricante, COUNT(P.codproduto) AS QuantidadeProdutos
FROM Fabricante F
LEFT JOIN Produto P ON F.codfabricante = P.codfabricante
GROUP BY F.codfabricante, F.nomefabricante;